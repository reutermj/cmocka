load("@rules_cc//cc:defs.bzl", "cc_test")

# All test targets
ALL_TESTS = [
    "test_alloc",
    "test_assert_double_float",
    "test_assert_double_float_fail",
    "test_assert_false",
    "test_assert_false_fail",
    "test_assert_macros",
    "test_assert_macros_fail",
    "test_assert_memory",
    "test_assert_memory_fail",
    "test_assert_ptr",
    "test_assert_ptr_fail",
    "test_assert_ptr_msg",
    "test_assert_ptr_msg_fail",
    "test_assert_range",
    "test_assert_range_fail",
    "test_assert_set",
    "test_assert_set_fail",
    "test_assert_true",
    "test_assert_true_fail",
    "test_assert_u_int",
    "test_assert_u_int_fail",
    "test_basics",
    "test_buffer",
    "test_double_macros",
    "test_exception_handler",
    "test_expect_check",
    "test_expect_check_fail",
    "test_expect_in_range",
    "test_expect_u_int_in_set",
    "test_fixtures",
    "test_float_macros",
    "test_group_fixtures",
    "test_group_setup_assert",
    "test_group_setup_fail",
    "test_groups",
    "test_log",
    "test_ordering",
    "test_ordering_fail",
    "test_returns",
    "test_returns_fail",
    "test_set_errno",
    "test_set_errno_fail",
    "test_set_parameter",
    "test_set_parameter_fail",
    "test_setup_fail",
    "test_skip",
    "test_skip_filter",
    "test_stop",
    "test_stop_fail",
    "test_strmatch",
    "test_strreplace",
    "test_string",
    "test_wildcard",
]

# Create all test targets with unified dependencies
[cc_test(
    name = test_name,
    srcs = [test_name + ".c"],
    copts = [
        "-std=c99",
        "-DHAVE_CONFIG_H",
        "-D_GNU_SOURCE",
        "-D_XOPEN_SOURCE=700",
    ],
    deps = [
        "//:cmocka",
        "//:cmocka_private",
    ],
) for test_name in ALL_TESTS]
